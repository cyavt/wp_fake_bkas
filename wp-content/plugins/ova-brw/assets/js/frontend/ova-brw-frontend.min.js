!function(g){"use strict";var d={init:function(){this.brw_datepicker(),this.submit_button(),this.ova_collapsed(),this.ova_ajax_show_total(),this.ova_ajax_show_total_after_load(),this.ova_guestspicker(),this.ova_search_ajax(),this.ova_choose_time()},brw_datepicker:function(){var i=0,i="undefined"!=typeof brw_first_day?brw_first_day:g(".ovabrw_datetimepicker").data("firstday");"undefined"!=typeof brw_lang_general_calendar&&g.datetimepicker.setLocale(brw_lang_general_calendar);var s="";"undefined"!=typeof brw_disable_week_day&&(s=brw_disable_week_day.split(",").map(function(a){return parseInt(a,10)}));var d="d-m-Y";switch(d="undefined"!=typeof brw_date_format?brw_date_format:d){case"d-m-Y":d="DD-MM-Y";break;case"m/d/Y":d="MM/DD/Y";break;case"Y/m/d":d="Y/MM/DD";break;case"Y-m-d":d="Y-MM-DD";break;default:d="DD-MM-Y"}var c=new Date;g.datetimepicker.setDateFormatter({parseDate:function(a,t){t=moment(a,t);return!!t.isValid()&&t.toDate()},formatDate:function(a,t){return moment(a).format(t)}}),g(window).width()<=1024&&g(".ovabrw_datetimepicker").datetimepicker({closeOnTimeSelect:!1}),g(".ovabrw_datetimepicker").each(function(){var a=[],t=g(this).data("order-time");t&&(a=t),"readonly"!=g(this).data("readonly")&&(a={scrollInput:!1,dayOfWeekStart:i,minDate:c,disabledWeekDays:s,disabledDates:a,format:d,formatDate:d,timepicker:!1,autoclose:!0},g(this).datetimepicker(a))}),g(".ovabrw_datetimepicker.ovabrw_start_date").focus(function(a){g(this).blur()}),g(".ovabrw_end_date").focus(function(){g(this).blur()}),g(".ovabrw_datetimepicker.ovabrw_start_date").on("click",function(a){var r=g(this).data("total-day"),o=g(this).closest("form").find(".ovabrw_end_date"),n=g(this).closest("form").find(".ovabrw-date-loading"),t=[],e=g(this).data("order-time");e&&(t=e),"readonly"!=g(this).data("readonly")&&(t={scrollInput:!1,dayOfWeekStart:i,minDate:c,disabledWeekDays:s,disabledDates:t,format:d,formatDate:d,timepicker:!1,autoclose:!0,onSelectDate:function(a,t){var e;a&&0<o.length&&0<n.length&&(e=function(a,t){var a=new Date(a),e=a.getDate();e<10&&(e="0"+e);var r=a.getMonth()+1;r<10&&(r="0"+r);var o=a.getFullYear();switch(t){case"DD-MM-Y":return e+"-"+r+"-"+o;case"MM/DD/Y":return r+"/"+e+"/"+o;case"Y/MM/DD":return o+"/"+r+"/"+e;case"Y-MM-DD":return o+"-"+r+"-"+e;default:return e+"-"+r+"-"+o}}(a.setDate(a.getDate()+parseInt(r)-1),d),n.show().delay(300).hide(0),setTimeout(function(){o.val(e)},300))}},g(this).datetimepicker(t))})},submit_button:function(){g(".ovabrw_btn_submit").on("click",function(a){var t=g(this).closest(".ovabrw_search").data("mesg_required"),e=!0;if(g(this).closest(".ovabrw_search").find(".content .wrap-error").empty(),g(this).closest(".form_ovabrw").find(".required").each(function(){g(this).val()||(e=!1,g(this).parent(".content").children(".wrap-error").append('<p class="error">'+t+"</p>"))}),!e)return a.preventDefault(),!1}),g("form.booking-form button.booking-form-submit").on("click",function(t){g(this).closest(".ova-booking-form").find(".required").each(function(){if(!g(this).val()){var a=g(this).data("error");return g(this).closest(".ova-booking-form").find(".ajax-error").html("").append(a).show(),t.preventDefault(),!1}g(this).closest(".ova-booking-form").find(".ajax-error").html("").hide()})}),g("form.request-form button.request-form-submit").on("click",function(t){g(this).closest(".ova-request-form").find(".required").each(function(){if(!g(this).val()){var a=g(this).data("error");return g(this).closest(".ova-request-form").find(".ajax-error").html("").append(a).show(),t.preventDefault(),!1}g(this).closest(".ova-booking-form").find(".ajax-error").html("").hide()})})},ova_collapsed:function(){g(".ovabrw-according").off().on("click",function(a){a.preventDefault(),g(this).siblings(".ovabrw_collapse_content").slideToggle()}),g(".ovabrw_open_popup").off().on("click",function(a){a.preventDefault(),g(this).siblings(".popup").css("display","block")}),g(".popup-close").on("click",function(a){a.preventDefault(),g(this).parent(".popup-inner").parent(".popup").css("display","none")}),g(".popup-close-2").on("click",function(a){a.preventDefault(),g(this).parent(".close_discount").parent(".popup-inner").parent(".popup").css("display","none")})},ova_ajax_show_total:function(){g("body").on("change","form.booking-form",function(){d.ova_ajax_show_total_after_load(g(this))}),g("form.booking-form").each(function(){var a=g(this),t=a.find('input[name="ovabrw_pickup_date"]').val();a.find('input[name="ovabrw_pickoff_date"]').val();t&&d.ova_ajax_show_total_after_load(a)})},ova_ajax_show_total_after_load:function(e=null){var a,r,o,n,i,s,d,c,l,u=[],f=[];null!=e&&(e.find('input[name="product_id"]').val()&&(s=e.find('input[name="product_id"]').val()),(a=e.find('input[name="ovabrw_pickup_date"]').val()?e.find('input[name="ovabrw_pickup_date"]').val():a)&&setTimeout(function(){var t;e.find('input[name="ovabrw_pickoff_date"]').val()&&(r=e.find('input[name="ovabrw_pickoff_date"]').val()),e.find('input[name="ovabrw_adults"]').val()&&(o=e.find('input[name="ovabrw_adults"]').val()),e.find('input[name="ovabrw_childrens"]').val()&&(n=e.find('input[name="ovabrw_childrens"]').val()),e.find('input[name="ovabrw_quantity"]').val()&&(i=e.find('input[name="ovabrw_quantity"]').val()),e.find('input[name="ova_type_deposit"]:checked').val()&&(d=e.find('input[name="ova_type_deposit"]:checked').val()),e.find(".ovabrw-resources input[type=checkbox]:checked").each(function(){u[g(this).data("rs-key")]=g(this).val()}),c=g.extend({},u),e.find("select[name='ovabrw_service[]']").each(function(){g(this).val()&&f.push(g(this).val())}),l=g.extend({},f),a&&r&&(e.find(".ajax-show-total .ovabrw-show-amount").css("display","flex"),t=e.find(".ajax-show-total .ajax-loading").show(),e.find(".ajax-show-total .show-availables-number").html(""),e.find(".ajax-show-total .show-amount-insurance").html(""),e.find(".ajax-show-total .show-total-number").html(""),g.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_calculate_total",product_id:s,pickup_date:a,dropoff_date:r,adults:o,childrens:n,quantity:i,deposit:d,resources:JSON.stringify(c),services:JSON.stringify(l)},success:function(a){a=JSON.parse(a);a&&(e.find(".ajax-show-total .show-availables-number").html("").append(a.quantity_available),e.find(".ajax-show-total .show-amount-insurance").html("").append(a.amount_insurance),e.find(".ajax-show-total .show-total-number").html("").append(a.line_total),a.adults_price&&e.find(".ovabrw-wrapper-guestspicker .adults-price").html("").append(a.adults_price),a.adults_price&&e.find(".ovabrw-wrapper-guestspicker .childrens-price").html("").append(a.childrens_price),e.find(".ajax-show-total .ovabrw-ajax-amount-insurance").show(),t.hide())}}))},300))},ova_search_ajax:function(){function w(a){a.find(".btn-video").each(function(){g(this).on("click",function(){var t=g(this).closest(".ova-video-gallery").find(".video-container"),a=g(this).closest(".ova-video-gallery").find(".ovaicon-cancel"),e=g(this).closest(".ova-video-gallery").find(".modal-video"),r=function(a){a=a.match(/^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=)([^#\&\?]*).*/);return a&&11==a[2].length?a[2]:"error"}(g(this).data("src")),o=g(this).data("controls"),n="?";n+="yes"==o.autoplay?"autoplay=1":"autoplay=0",n+="yes"==o.mute?"&mute=1":"&mute=0",n+="yes"==o.loop?"&loop=1":"&loop=0",n+="yes"==o.controls?"&controls=1":"&controls=0",n+="yes"==o.rel?"&rel=1":"&rel=0",n+="yes"==o.modest?"&modestbranding=1":"&modestbranding=0","error"!=r&&(e.attr("src","https://www.youtube.com/embed/"+r+(n+="&playlist="+r)),t.css("display","flex")),a.on("click",function(){t.hide(),e.removeAttr("src")}),g(window).click(function(a){"video-container"==a.target.className&&(t.hide(),e.removeAttr("src"))})})})}function s(){var t=g(document).find(".ovabrw-search-ajax .wrap-search-ajax"),a=t.find(".filter-layout-active").attr("data-layout"),e=t.data("grid_column"),r=t.find("#brw-destinations-select-box :selected").val(),o=t.find("#brw_custom_taxonomy_dropdown :selected").val(),n=t.find("#brw_custom_taxonomy_dropdown").attr("name"),i=t.find('input[name="ovabrw_pickup_date"]').val(),s=t.find('input[name="ovabrw_adults"]').val(),d=t.find('input[name="ovabrw_childrens"]').val(),c=t.find(".brw-tour-price-from").val(),l=t.find(".brw-tour-price-to").val(),u=[],f=[];t.find(".rating-filter:checked").each(function(a){u[a]=g(this).val()}),t.find(".tour-category-filter:checked").each(function(a){f[a]=g(this).val()});var p=t.find(".brw-search-ajax-result"),_=p.data("order"),v=p.data("orderby"),h=p.data("orderby_meta_key"),m=p.data("posts-per-page"),b=p.find(".ovabrw-pagination-ajax .current").attr("data-paged");t.find(".wrap-load-more").show(),g.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_search_ajax",order:_,orderby:v,orderby_meta_key:h,posts_per_page:m,paged:b,layout:a,grid_column:e,destination:r,custom_taxonomy:o,slug_taxonomy:n,start_date:i,adults:s,childrens:d,start_price:c,end_price:l,review_score:u,categories:f},success:function(a){a&&(a=JSON.parse(a),a=g(a.result).fadeOut(300).fadeIn(500),p.html(a),null==(a=p.find(".tour_number_results_found").val())&&(a=0),p.closest(".wrap-search-ajax").find(".number-result-tour-found").html("").append(a),t.find(".wrap-load-more").hide(),w(t),t.find(".btn-gallery").on("click",function(){var a=g(this).data("gallery");Fancybox.show(a,{Image:{Panzoom:{zoomFriction:.7,maxScale:function(){return 3}}}})}))}})}0<g(".ovabrw-search-ajax .wrap-search-ajax").length&&s(),g(".ovabrw-search-ajax .wrap-search-ajax .ovabrw-btn").on("click",function(a){s(),g("html, body").animate({scrollTop:g("#brw-search-ajax-result").offset().top-250},500);var t=g(this).closest(".wrap-search-ajax").find(".search-advanced-field-wrapper"),e=t.closest(".ovabrw-search-advanced").find(".search-advanced-input i");t.removeClass("toggled"),e.removeClass("icomoon-chevron-up"),e.addClass("icomoon-chevron-down"),g(this).closest(".wrap-search-ajax").find(".input_select_list").hide(),a.preventDefault()}),g(".ovabrw-search-ajax").on("click",".wrap-search-ajax .filter-layout",function(a){a.preventDefault();var t=g(this),a=g(".wrap-search-ajax .filter-layout-active").attr("data-layout");t.attr("data-layout")!=a&&(g(".wrap-search-ajax .filter-layout").removeClass("filter-layout-active"),t.addClass("filter-layout-active"),s())}),g(".ovabrw-search-ajax").on("click",".wrap-search-ajax .ovabrw-tour-filter .input_select_list .term_item",function(a){a.preventDefault();var t=g(this),a=t.closest(".filter-sort").find(".input_select_input_value").val(),t=t.closest(".wrap-search-ajax").find(".brw-search-ajax-result");"id_desc"==a?(t.data("order","DESC"),t.data("orderby","ID"),t.data("orderby_meta_key",""),s()):"rating_desc"==a?(t.data("order","DESC"),t.data("orderby","meta_value_num"),t.data("orderby_meta_key","_wc_average_rating"),s()):"price_asc"==a?(t.data("order","ASC"),t.data("orderby","meta_value_num"),t.data("orderby_meta_key","_price"),s()):"price_desc"==a&&(t.data("order","DESC"),t.data("orderby","meta_value_num"),t.data("orderby_meta_key","_price"),s())}),g(document).on("click",".ovabrw-search-ajax .wrap-search-ajax .ovabrw-pagination-ajax .page-numbers",function(a){a.preventDefault();a=g(this);g(".wrap-search-ajax .ovabrw-pagination-ajax .current").attr("data-paged")!=a.attr("data-paged")&&(g(window).scrollTop(0),g(".wrap-search-ajax .ovabrw-pagination-ajax .page-numbers").removeClass("current"),a.addClass("current"),s())}),g(".ovabrw-tour-filter .clear-filter").on("click",function(a){a.preventDefault();var t=g(this),e=t.closest(".wrap-search-ajax"),r=e.data("adults"),o=e.data("childrens"),n=e.data("sort_by_default"),i=e.data("start-price"),a=e.data("end-price");t.closest(".wrap-search-ajax").find(".ovabrw-pagination-ajax").attr("data-paged",1),e.find("#brw-destinations-select-box, #brw_custom_taxonomy_dropdown").val("all").trigger("change"),e.find('input[name="ovabrw_pickup_date"]').val("").trigger("change"),e.find('input[name="ovabrw_adults"]').val(r),e.find('input[name="ovabrw_childrens"]').val(o),e.find(".ovabrw-guestspicker .gueststotal").html(r+o),e.find(".search-advanced-field-wrapper input:checkbox").removeAttr("checked"),e.find(".brw-tour-price-from").val(i),e.find(".brw-tour-price-to").val(a),e.find("#brw-tour-price-slider .ui-slider-range").css({left:"0",width:"100%"}),e.find("#brw-tour-price-slider  span").css("left","100%"),e.find("#brw-tour-price-slider .ui-slider-range + span").css("left","0"),e.find(".input_select_list .term_item ").removeClass("term_item_selected"),e.find('.input_select_list .term_item[data-id="'+n+'"]').addClass("term_item_selected");a=e.find('.input_select_list .term_item[data-id="'+n+'"]').data("value");e.find(".input_select_input").val(a),e.find(".input_select_input_value").val(n);e=e.find(".brw-search-ajax-result");"id_desc"==n?(e.data("order","DESC"),e.data("orderby","ID"),e.data("orderby_meta_key","")):"rating_desc"==n?(e.data("order","DESC"),e.data("orderby","meta_value_num"),e.data("orderby_meta_key","_wc_average_rating")):"price_asc"==n?(e.data("order","ASC"),e.data("orderby","meta_value_num"),e.data("orderby_meta_key","_price")):"price_desc"==n&&(e.data("order","DESC"),e.data("orderby","meta_value_num"),e.data("orderby_meta_key","_price")),s()}),g(document).find(".wrap-search-ajax .brw-search-ajax-result .ova-video-gallery").each(function(){g(this)}),g(document).find(".wrap-search-ajax .brw-search-ajax-result .ova-video-gallery").each(function(){g(this)})},ova_guestspicker:function(){function r(a,t,e="booking"){var r=a.closest("form.booking-form"),o=a.closest(".guests-button").find('input[type="text"]'),n=o.val(),i=o.attr("min"),s=o.attr("max");"sub"==t&&parseInt(n)>parseInt(i)&&(o.val(parseInt(n)-1),"booking"===e&&d.ova_ajax_show_total_after_load(r)),"sum"==t&&parseInt(n)<parseInt(s)&&(o.val(parseInt(n)+1),"booking"===e&&d.ova_ajax_show_total_after_load(r));e=a.closest(".ovabrw-wrapper-guestspicker"),r=e.find(".ovabrw_adults").val(),a=e.find(".ovabrw_childrens").val(),e=e.find(".gueststotal");e&&e.text(parseInt(r)+parseInt(a))}g("form.booking-form .ovabrw-wrapper-guestspicker").each(function(){var a=g(this),t=a.find(".ovabrw-guestspicker"),e=a.find(".ovabrw-guestspicker-content");t.on("click",function(){e.toggle()}),g(window).click(function(a){t.is(a.target)||0!==t.has(a.target).length||e.is(a.target)||0!==e.has(a.target).length||e.hide()}),a.find(".minus").on("click",function(){r(g(this),"sub","booking")}),a.find(".plus").on("click",function(){r(g(this),"sum","booking")})}),g("form.request-form .ovabrw-wrapper-guestspicker").each(function(){var a=g(this),t=a.find(".ovabrw-guestspicker"),e=a.find(".ovabrw-guestspicker-content");t.on("click",function(){e.toggle()}),g(window).click(function(a){t.is(a.target)||0!==t.has(a.target).length||e.is(a.target)||0!==e.has(a.target).length||e.hide()}),a.find(".minus").on("click",function(){r(g(this),"sub","request")}),a.find(".plus").on("click",function(){r(g(this),"sum","request")})})},ova_choose_time:function(){function a(a){var t,e;!a||(t=a.val())&&(t=(e=t.split("|"))[0],e=e[1],a.closest("form.form").find(".ovabrw_start_date").val(t),a.closest("form.form").find(".ovabrw_end_date").val(e),d.ova_ajax_show_total())}g(".ovabrw_fixed_time").each(function(){a(g(this))}),g(".ovabrw_fixed_time").on("change",function(){a(g(this))})}};g(document).ready(function(){d.init()})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,