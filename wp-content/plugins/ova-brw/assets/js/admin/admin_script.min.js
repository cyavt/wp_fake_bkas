!function(k){"use strict";var l={init:function(){this.ovabrw_datepicker(),this.choosehour(),this.change_pack_type(),this.brw_custom_checkout_taxonomy(),this.brw_create_manuall_order(),this.brw_update_order_status(),this.choosetime_full(),this.date_book(),this.brw_change_deposit(),this.brw_manage_feature_text(),this.brw_add_fixed_time(),this.brw_add_extra_feature(),this.brw_unavailable_time(),this.brw_local_price(),this.brw_manage_resource(),this.brw_manage_service(),this.brw_manage_cus_taxonomy(),this.brw_ui_select_cus_tax(),this.brw_manage_period_time(),this.brw_manage_show_hide_field_at_frontend(),this.brw_manage_globa_discount(),this.brw_manage_special_time(),this.brw_change_rental_type(),this.brw_show_hide_field_edit_product(),this.brw_show_hide_field_edit_category(),this.brw_product_templates(),this.brw_product_map()},ovabrw_datepicker:function(){var o,i,t,n;switch("undefined"!=typeof brw_lang_general_calendar&&k.datetimepicker.setLocale(brw_lang_general_calendar),"undefined"!=typeof brw_disable_week_day&&(o=brw_disable_week_day.split(",").map(function(e){return parseInt(e,10)})),"undefined"!=typeof brw_format_time&&0,i="undefined"!=typeof brw_date_format?brw_date_format:i){case"d-m-Y":i="DD-MM-Y";break;case"m/d/Y":i="MM/DD/Y";break;case"Y/m/d":i="Y/MM/DD";break;case"Y-m-d":i="Y-MM-DD";break;default:i="DD-MM-Y"}t="undefined"!=typeof brw_data_step&&""!=brw_data_step?brw_data_step:30,n="undefined"!=typeof brw_first_day?parseInt(brw_first_day):1,k.datetimepicker.setDateFormatter({parseDate:function(e,t){t=moment(e,t);return!!t.isValid()&&t.toDate()},formatDate:function(e,t){return moment(e).format(t)}}),k(".ovabrw_rt_date").each(function(){var e={dayOfWeekStart:n,minDate:0,format:i,formatDate:i,step:t,timepicker:!1,scrollMonth:!1};k(this).datetimepicker(e)}),k(".ovabrw_rt_date.ovabrw_rt_enddate").each(function(){var e={dayOfWeekStart:n,minDate:0,format:i,formatDate:i,step:t,timepicker:!1,scrollMonth:!1};k(this).datetimepicker(e)}),k(".ovabrw_rt_enddate").on("click",function(){var e=k(this).closest(".row_rt_record").find('input[name="ovabrw_st_startdate[]"]').val(),e={dayOfWeekStart:n,minDate:e||0,format:i,formatDate:i,step:t,timepicker:!1,scrollMonth:!1};k(this).datetimepicker(e)}),k(".ovabrw_datetimepicker").each(function(){var e=k(this).attr("date_rent_full"),t="",t={scrollInput:!1,dayOfWeekStart:n,minDate:0,disabledWeekDays:o,formatDate:i,format:i,timepicker:!1,disabledDates:t=void 0!==e&&!1!==e?e:t};k(this).datetimepicker(t)}),k(".ovabrw_datetimepicker.ova-date-search").each(function(){var e={dayOfWeekStart:n,minDate:!1,disabledWeekDays:o,format:i,allowTimes:!1,timepicker:!0};k(this).datetimepicker(e)}),k(".ovabrw_datetimepicker.ovabrw_start_date ").on("click",function(e){var a=k(this).data("days"),r=k(this).data("date-format"),o=k(this).closest(".sub-item").find('input[id="ovabrw-dropoff-date"]'),t={scrollInput:!1,dayOfWeekStart:n,minDate:0,format:i,formatDate:i,timepicker:!1,autoclose:!0,onSelectDate:function(e,t){e&&0<o.length&&((e=function(e,t){var e=new Date(e),a=e.getDate();a<10&&(a="0"+a);var r=e.getMonth()+1;r<10&&(r="0"+r);var o=e.getFullYear();switch(t){case"d-m-Y":return a+"-"+r+"-"+o;case"m/d/Y":return r+"/"+a+"/"+o;case"Y/m/d":return o+"/"+r+"/"+a;case"Y-m-d":return o+"-"+r+"-"+a;default:return a+"-"+r+"-"+o}}(e.setDate(e.getDate()+a-1),r))&&o.val(e))}};k(this).datetimepicker(t)}),k(".ovabrw_datetimepicker.ovabrw_end_date").on("click",function(){var e=!1;e=(e=(e=k(this).parent(".rental_item").parent(".sub-item").children(".rental_item").children(".ovabrw_start_date").val())||k(this).parent("td").parent(".tr_petime_discount").children("td").children(".ovabrw_start_date").val())||k(this).closest(".booking_filter").find(".ovabrw_start_date").val();e={dayOfWeekStart:n,minDate:e||0,disabledWeekDays:o,format:i,formatDate:i,allowTimes:!1,timepicker:!1};k(this).datetimepicker(e)}),k('input[name="to_day"]').on("click",function(){k(this).closest(".booking_filter").find('input[name="from_day"]').val();var e={dayOfWeekStart:n,format:i,formatDate:i,allowTimes:!1,timepicker:!1};k(this).datetimepicker(e)}),k(".unavailable_time").each(function(){var e={dayOfWeekStart:n,minDate:0,disabledWeekDays:o,format:i,formatDate:i,step:t,timepicker:!1,scrollMonth:!1};k(this).datetimepicker(e)}),k(".unavailable_time.end_date").on("click",function(){var e=k(this).closest(".tr_rt_untime").find('input[name="ovabrw_untime_startdate[]"]').val(),e={dayOfWeekStart:n,minDate:e||0,disabledWeekDays:o,format:i,formatDate:i,step:t,timepicker:!1,scrollMonth:!1};k(this).datetimepicker(e)}),k(".ovabrw_fixed_timepicker").each(function(){var a=k(this).closest(".ovabrw_metabox_car_rental").find('input[name="ovabrw_number_days"]').val(),r=k(this).closest(".tr_rt_fixed_time").find('input[name="ovabrw_fixed_time_check_out[]"]'),e={dayOfWeekStart:n,minDate:0,disabledWeekDays:o,format:i,formatDate:i,step:t,timepicker:!1,scrollMonth:!1,onSelectDate:function(e,t){e&&0<r.length&&a&&(e=function(e,t){var e=new Date(e),a=e.getDate();a<10&&(a="0"+a);var r=e.getMonth()+1;r<10&&(r="0"+r);var o=e.getFullYear();switch(t){case"DD-MM-Y":return a+"-"+r+"-"+o;case"MM/DD/Y":return r+"/"+a+"/"+o;case"Y/MM/DD":return o+"/"+r+"/"+a;case"Y-MM-DD":return o+"-"+r+"-"+a;default:return a+"-"+r+"-"+o}}(e.setDate(e.getDate()+parseInt(a)-1),i),r.val(e))}};k(this).datetimepicker(e)}),k(".ovabrw_fixed_timepicker.check_out").on("click",function(){var e=k(this).closest(".tr_rt_fixed_time").find('input[name="ovabrw_fixed_time_check_in[]"]').val(),e={dayOfWeekStart:n,minDate:e||0,disabledWeekDays:o,format:i,formatDate:i,step:t,timepicker:!1,scrollMonth:!1};k(this).datetimepicker(e)})},choosehour:function(){var e,t,a;"undefined"!=typeof brw_lang_general_calendar&&(e=brw_lang_general_calendar),k.datetimepicker.setLocale(e),"undefined"!=typeof brw_time_to_book_general_calendar&&(t=brw_time_to_book_general_calendar),""==(a="undefined"!=typeof brw_data_step?brw_data_step:30)&&(a=30),k.datetimepicker.setDateFormatter({parseDate:function(e,t){t=moment(e,t);return!!t.isValid()&&t.toDate()},formatDate:function(e,t){return moment(e).format(t)}}),k(".ovabrw_pehour_picker").each(function(){var e="",e={datepicker:!1,format:e="undefined"!=typeof brw_format_time?brw_format_time:"h:mm A",formatTime:e,step:a,allowTimes:t};k(this).datetimepicker(e)})},change_pack_type:function(){k(".row_petime_record").each(function(){k(this).bind("change_package_type",function(){var e,t=k(this).find("select.ovabrw_package_type :selected").val();"inday"==t?(e=k("select#ovabrw_unfixed_time :selected").val(),k(this).find(".ovabrw_petime_days").hide(),k(this).find(".period_times").show(),"yes"!==e?(k(this).find(".period_times").show(),k(this).find(".period_times_unfixed").hide()):(k(this).find(".period_times_unfixed").show(),k(this).find(".period_times").hide())):"other"==t&&(k(this).find(".ovabrw_petime_days").show(),k(this).find(".period_times").hide(),k(this).find(".period_times_unfixed").hide())}),k(this).trigger("change_package_type"),k(this).find("select.ovabrw_package_type").change(function(){k(this).trigger("change_package_type")})})},brw_custom_checkout_taxonomy:function(){var b="Option Value",w="Option Text",m="Add new option",h="Remove option";"undefined"!=typeof label_option_value&&(b=label_option_value),"undefined"!=typeof label_option_text&&(w=label_option_text),"undefined"!=typeof label_add_new_opt&&(m=label_add_new_opt),"undefined"!=typeof label_remove_opt&&(h=label_remove_opt);var a="Are you sure ?";"undefined"!=typeof label_are_you_sure&&(a=label_are_you_sure);var o="";o+="<tr>",o+='<td ><input type="text" name="ova_options_key[]" placeholder="'+b+'" /></td>',o+='<td ><input type="text" name="ova_options_text[]" placeholder="'+w+'" /></td>',o+='<td class="ova-box "><a href="javascript:void(0)" class=" ovabrw_addfield btn btn-blue" title="'+m+'">+</a></td>',o+='<td class="ova-box "><a href="javascript:void(0)"  class=" ovabrw_remove_row btn btn-red" title="'+h+'">x</a></td>',o+='<td class="ova-box sort ui-sortable-handle"></td>',o+="</tr>",k(document).on("click",".ovabrw_addfield",function(e){var t=k(this).closest("table"),a=t.find("tbody tr").size(),r=(r=k(".ova-wrap-popup-ckf").attr("height"))?parseInt(r)+5:110;k(".ova-wrap-popup-ckf").attr("height",r),k(".ova-wrap-popup-ckf").css("height",r+"vh"),0<a?t.find("tbody tr:last").after(o):t.find("tbody").append(o)}),k(document).on("click",".ovabrw_remove_row",function(e){var t=k(this).closest("table");k(this).closest("tr").remove(),0==t.find("tbody tr").size()&&t.find("tbody").append(o)}),k(".ovabrw_edit_field_form").on("click",function(e){var t=k(this).data("data_edit"),a=t.name,r=t.type||"text",o=t.label,i=t.placeholder,n=t.default,_=t.class,c=t.ova_options_key,d=t.ova_options_text,s=t.slug,l=t.singular_name,p=t.label_frontend,u=t.required,v=t.enabled,t=t.show_listing;"select"==r?k(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none"):k(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","table-row");var f="";"select"===r?(k(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options table.ova-sub-table tbody").empty(),k(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","table-row"),c.forEach(function(e,t){f+="<tr>",f+='<td ><input type="text" name="ova_options_key[]" placeholder="'+b+'" value="'+e+'" /></td>',f+='<td ><input type="text" name="ova_options_text[]" placeholder="'+w+'" value="'+d[t]+'" /></td>',f+='<td class="ova-box "><a href="javascript:void(0)"  class="ovabrw_addfield btn btn-blue" title="'+m+'">+</a></td>',f+='<td class="ova-box "><a href="javascript:void(0)" class="ovabrw_remove_row btn btn-red" title="'+h+'">x</a></td>',f+='<td class="ova-box sort ui-sortable-handle"></td>',f+="</tr>"}),k(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options table.ova-sub-table tbody").append(f)):k(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","none"),k('#ova_popup_field_form input[name="ova_action"]').val("edit"),k('#ova_popup_field_form input[name="ova_old_name"]').val(a),k('#ova_popup_field_form input[name="ova_old_slug"]').val(s),k("#ova_type").val(r),k("#ova_popup_field_form .ova-row-name input").val(a),k("#ova_popup_field_form .ova-row-label input").val(o),k("#ova_popup_field_form .ova-row-placeholder input").val(i),k("#ova_popup_field_form .ova-row-default input").val(n),k("#ova_popup_field_form .ova-row-class input").val(_),k("#ova_popup_field_form .ova-row-slug input").val(s).attr("readonly",!0),k("#ova_popup_field_form .ova-row-sigular-name input").val(l),k("#ova_popup_field_form .ova-row-label-frontend input").val(p),"on"==u?k("#ova_popup_field_form .row-required #ova_required").prop("checked",!0):k("#ova_popup_field_form .row-required #ova_required").prop("checked",!1),"on"==v?k("#ova_popup_field_form .row-required #ova_enable").prop("checked",!0):k("#ova_popup_field_form .row-required #ova_enable").prop("checked",!1),"on"==t?k("#ova_popup_field_form .row-show-listing #show_listing").prop("checked",!0):k("#ova_popup_field_form .row-show-listing #show_listing").prop("checked",!1),k(".ova-wrap-popup-ckf").css("display","block")}),k("#ovabrw_openform").on("click",function(e){k('#ova_popup_field_form input[name="ova_action"]').val("new"),k('#ova_popup_field_form input[name="ova_old_name"]').val(""),k('#ova_popup_field_form input[name="ova_old_slug"]').val(""),k(".ova-wrap-popup-ckf").css("display","block"),k("#ova_type").val("text"),k('.ova-wrap-popup-ckf input[name="name"]').val(""),k('.ova-wrap-popup-ckf input[name="label"]').val(""),k('.ova-wrap-popup-ckf input[name="placeholder"]').val(""),k('.ova-wrap-popup-ckf input[name="default"]').val(""),k(".ova-wrap-popup-ckf .row-options").css("display","none"),k('.ova-wrap-popup-ckf input[name="slug"]').val("").removeAttr("readonly"),k('.ova-wrap-popup-ckf input[name="singular_name"]').val(""),k('.ova-wrap-popup-ckf input[name="label_frontend"]').val(""),k(".ova-wrap-popup-ckf #ova_required").attr("checked","checked"),k(".ova-wrap-popup-ckf #ova_enable").attr("checked","checked"),k(".ova-wrap-popup-ckf #show_listing").attr("checked","checked")}),k("#ovabrw_select_all_field").on("click",function(e){var t=k(this).prop("checked");k(".ova-list-checkout-field table tbody tr td.ova-checkbox input").prop("checked",t)}),k("#ovabrw_close_popup").on("click",function(e){k(".ova-wrap-popup-ckf").css("display","none")}),k('input[name="remove"]').on("click",function(e){var t;([t=""]=[a],confirm(t))||e.preventDefault()}),k("#ova_type").on("change",function(){k(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","none"),k(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","table-row"),"select"==k(this).val()&&(k(".ova-wrap-popup-ckf .ova-popup-wrapper tr.row-options").css("display","table-row"),k(".ova-wrap-popup-ckf .ova-popup-wrapper tr.ova-row-placeholder").css("display","none"))})},brw_create_manuall_order:function(){l.brw_create_order_button(),l.brw_create_order_country(),l.brw_create_order_change_product(),l.brw_create_order_pickup_date_change(),l.brw_create_order_remove_order_item(),l.brw_create_order_change_adults(),l.brw_create_order_change_adults(),l.brw_create_order_change_childrens(),l.brw_create_order_change_deposit(),l.brw_create_order_change_resources(),l.brw_create_order_change_services(),k(".insert_wrap_item").on("click",function(e){e.preventDefault();e=k(this).data("row");k(this).closest(".wrap").find(".wrap_item").append(e),l.brw_create_order_button(),l.brw_create_order_country(),l.brw_create_order_change_product(),l.brw_create_order_pickup_date_change(),l.brw_create_order_remove_order_item(),l.brw_create_order_change_adults(),l.brw_create_order_change_adults(),l.brw_create_order_change_childrens(),l.brw_create_order_change_deposit(),l.brw_create_order_change_resources(),l.brw_create_order_change_services()})},brw_create_order_button:function(){k("form#booking-filter .button").on("click",function(t){k(this).closest("form#booking-filter").find(".required").each(function(){if(!k(this).val()){var e=k(this).data("error");return k(this).closest("form#booking-filter").find(".create-order-error").html("").append(e).show(),t.preventDefault(),!1}k(this).closest("form#booking-filter").find(".ajax-error").html("").hide()})})},brw_create_order_change_product:function(){k('.ovabrw-order select[name="ovabrw-data-product[]"]').on("change",function(){var e=k(this),d=e.parent(".rental_item").parent(".sub-item").parent(".item").find(".loading");d.css("display","inline-block");var t=e.val(),s=e.parent(".rental_item").parent(".sub-item").parent(".item");e.data("date_format");s.children(".sub-item").find("input").val(""),t?s.children(".sub-item.ovabrw-meta").css("display","block"):s.children(".sub-item.ovabrw-meta").css("display","none"),s.children(".sub-item").children(".ovabrw-amount-remaining").css("display","none"),s.children(".sub-item").children(".ovabrw-total").css("display","none"),s.children(".sub-item").children(".ovabrw-error").css("display","none"),k.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_load_data_product_create_order",product_id:t},success:function(e){var t=k.parseJSON(e),a=t.adult_price,r=t.children_price,o=t.adults_max,i=t.adults_min,n=t.childrens_max,_=t.childrens_min,c=t.days,e=(t.amount_insurance,t.stock_quantity,t.html_resources),t=t.html_services;s.find('input[id="ovabrw-pickup-date"]').attr("data-days",c),s.find('input[id="ovabrw-adult-price"]').val(a),s.find('input[id="ovabrw-children-price"]').val(r),s.find('input[id="ovabrw_adults"]').attr("max",o),s.find('input[id="ovabrw_adults"]').attr("min",i),s.find('input[id="ovabrw_adults"]').val(i),s.find('input[id="ovabrw_childrens"]').attr("max",n),s.find('input[id="ovabrw_childrens"]').attr("min",_),s.find('input[id="ovabrw_childrens"]').val(_),e?(s.children(".sub-item").children(".rental_item.ovabrw-resources").find("span.ovabrw-resources-span").html(e),s.children(".sub-item").children(".rental_item.ovabrw-resources").css("display","flex")):(s.children(".sub-item").children(".rental_item.ovabrw-resources").find("span.ovabrw-resources-span").empty(),s.children(".sub-item").children(".rental_item.ovabrw-resources").css("display","none")),s.children(".sub-item").children(".rental_item.ovabrw-services").find("span.ovabrw-services-span").empty(),t?(s.children(".sub-item").children(".rental_item.ovabrw-services").find("span.ovabrw-services-span").html(t),s.children(".sub-item").children(".rental_item.ovabrw-services").css("display","flex")):(s.children(".sub-item").children(".rental_item.ovabrw-services").find("span.ovabrw-services-span").empty(),s.children(".sub-item").children(".rental_item.ovabrw-services").css("display","none")),d.hide(),l.ovabrw_datepicker()}})})},brw_create_order_view_total_cost:function(e){var t=k(e).closest(".item"),a=t.find('select[id="ovabrw-data-product"]').val(),r=t.find('input[id="ovabrw-pickup-date"]').val(),o=t.find('input[id="ovabrw-pickup-date"]').val(),i=t.find('input[id="ovabrw_adults"]').val(),n=t.find('input[id="ovabrw_childrens"]').val(),_=t.find('input[id="ovabrw-amount-deposite"]').val(),c=[];t.find(".resources_order input[type=checkbox]:checked").each(function(){c[k(this).data("resource_key")]=k(this).val()});var d=k.extend({},c),s=[];t.find(".services_order select[name='ovabrw_service["+a+"][]']").each(function(){k(this).val()&&s.push(k(this).val())});e=k.extend({},s);t.find(".ovabrw-error").css("display","none"),t.find(".loading-total").css("display","inline-block"),k.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_create_order_get_total",product_id:a,start_date:r,end_date:o,adults:i,childrens:n,deposit_amount:_,resources:JSON.stringify(d),services:JSON.stringify(e)},success:function(e){e=k.parseJSON(e);e.error?t.find(".ovabrw-error").show().find(".ovabrw-error-span").html("").append(e.error):(t.find('input[id="ovabrw-adult-price"]').val(e.adults_price),t.find('input[id="ovabrw-children-price"]').val(e.childrens_price),t.find('input[id="ovabrw-amount-insurance"]').val(e.amount_insurance),t.find(".ovabrw-amount-remaining").show().find('input[id="ovabrw-amount-remaining"]').val(e.remaining_amount),t.find(".ovabrw-total").show().find('input[id="ovabrw-total-product"]').val(e.line_total)),t.find(".loading-total").hide()}})},brw_create_order_pickup_date_change:function(){k('.ovabrw-order input[id="ovabrw-pickup-date"]').focus(function(e){k(this).blur(),e.preventDefault()}),k('.ovabrw-order input[id="ovabrw-pickup-date"]').on("change",function(){var e=k(this),t=e.val(),a=e.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val();t&&a&&l.brw_create_order_view_total_cost(e)})},brw_create_order_remove_order_item:function(){k(".ovabrw-order").on("click",".delete_order",function(e){e.preventDefault(),k(this).closest(".ovabrw-order").remove()})},brw_create_order_change_adults:function(){k('.ovabrw-order input[id="ovabrw_adults"]').on("change",function(){var e=k(this),t=e.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val(),a=e.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val();t&&a&&l.brw_create_order_view_total_cost(e)})},brw_create_order_change_childrens:function(){k('.ovabrw-order input[id="ovabrw_childrens"]').on("change",function(){var e=k(this),t=e.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val(),a=e.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val();t&&a&&l.brw_create_order_view_total_cost(e)})},brw_create_order_change_deposit:function(){k('.ovabrw-order input[id="ovabrw-amount-deposite"]').on("change",function(){var e=k(this),t=e.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val(),a=e.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val();t&&a&&l.brw_create_order_view_total_cost(e)})},brw_create_order_country:function(){0<k(".ovabrw_country").length&&k(".ovabrw_country").select2()},brw_create_order_change_resources:function(){k(document).on("change",".resources_order",function(e){var t=k(this),a=t.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val(),r=t.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val();a&&r&&l.brw_create_order_view_total_cost(t)})},brw_create_order_change_services:function(){k(document).on("change",".services_order",function(e){var t=k(this),a=t.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val(),r=t.closest(".sub-item").find('input[id="ovabrw-dropoff-date"]').val();a&&r&&l.brw_create_order_view_total_cost(t)})},brw_update_order_status:function(){k(document).on("change",".update_order_status",function(e){var t,a,r,o=k(this).children("option:selected").html(),i=k(this).children("option:selected").val(),o=confirm("Do you want to "+o+" Booking ?"),n=k(this);1==o&&""!=i&&(o=k(this).data("order_id"),t=k(this).children("option:selected").val().replace("wc-",""),a=k(this).closest(".order_status").find(".order-status"),r=k(this).closest(".order_status").find(".order-status span"),k.post(ajaxurl,{action:"update_order_status_woo",order_id:o,new_order_status:i},function(e){"error_permission"===e?alert(n.data("error-per-msg")):"false"===e?alert(n.data("error-update-msg")):(a.attr("class",""),a.addClass("order-status tips status-"+t),r.html(t))})),e.preventDefault()})},choosetime_full:function(){var t,a;switch("undefined"!=typeof brw_date_format&&(t=brw_date_format),a="undefined"!=typeof brw_first_day?parseInt(brw_first_day):1,t){case"d-m-Y":t="DD-MM-Y";break;case"m/d/Y":t="MM/DD/Y";break;case"Y/m/d":t="Y/MM/DD";break;case"Y-m-d":t="Y-MM-DD";break;default:t="DD-MM-Y"}k.datetimepicker.setDateFormatter({parseDate:function(e,t){t=moment(e,t);return!!t.isValid()&&t.toDate()},formatDate:function(e,t){return moment(e).format(t)}}),k(".datetimepicker_full").each(function(){var e={format:t,dayOfWeekStart:a,minDate:0,changeMonth:!0,changeYear:!0};k(this).datetimepicker(e)})},date_book:function(){k(".date_book").each(function(){var e;switch("undefined"!=typeof brw_date_format&&(e=brw_date_format),t="undefined"!=typeof brw_first_day?parseInt(brw_first_day):1,e){case"d-m-Y":e="DD-MM-Y";break;case"m/d/Y":e="MM/DD/Y";break;case"Y/m/d":e="Y/MM/DD";break;case"Y-m-d":e="Y-MM-DD";break;default:e="DD-MM-Y"}k.datetimepicker.setDateFormatter({parseDate:function(e,t){t=moment(e,t);return!!t.isValid()&&t.toDate()},formatDate:function(e,t){return moment(e).format(t)}});var t={dateFormat:e,dayOfWeekStart:t,changeMonth:!0,changeYear:!0,timepicker:!1,scrollMonth:!1};k(this).datetimepicker(t)})},brw_change_deposit:function(){function r(e,t,a){"percent"==e?a+=" ( % )":a=a+" ( "+t+" )",k(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field label").text(a)}"no"===k(".ovabrw_metabox_car_rental #ovabrw_enable_deposit").val()?(k(".ovabrw_metabox_car_rental .ovabrw_force_deposit_field").css("display","none"),k(".ovabrw_metabox_car_rental .ovabrw_type_deposit_field").css("display","none"),k(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field").css("display","none")):(k(".ovabrw_metabox_car_rental .ovabrw_force_deposit_field").css("display","block"),k(".ovabrw_metabox_car_rental .ovabrw_type_deposit_field").css("display","block"),k(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field").css("display","block")),k(".ovabrw_metabox_car_rental #ovabrw_enable_deposit").on("change",function(){"no"===k(this).val()?(k(".ovabrw_metabox_car_rental .ovabrw_force_deposit_field").css("display","none"),k(".ovabrw_metabox_car_rental .ovabrw_type_deposit_field").css("display","none"),k(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field").css("display","none")):(k(".ovabrw_metabox_car_rental .ovabrw_force_deposit_field").css("display","block"),k(".ovabrw_metabox_car_rental .ovabrw_type_deposit_field").css("display","block"),k(".ovabrw_metabox_car_rental .ovabrw_amount_deposit_field").css("display","block"))}),k(".ovabrw_metabox_car_rental #ovabrw_type_deposit").each(function(){var e=k(this).val(),t=k(this).data("currency"),a=k(this).data("label");r(e,t,a),k(this).on("change",function(){r(k(this).val(),t,a)})}),k("body").on("change",".woocommerce_order_items input.amount_deposit",function(){var e=k(this).closest("tr.item"),t=k(this).val(),a=k("input.deposit_remaining",e),e=k("input.line_total",e);""!==t&&0<parseFloat(e.val())-parseFloat(t)?a.val(parseFloat(e.val())-parseFloat(t)):a.val("")}).on("change",".woocommerce_order_items input.line_total",function(){var e=k(this).closest("tr.item"),t=k("input.amount_remaining",e),a=k("input.deposit_paid",e),e=k(this).val();""!==a.val()&&0<=parseFloat(e)-parseFloat(a.val())?t.val(parseFloat(e)-parseFloat(a.val())):t.val("")})},brw_change_rental_type:function(){k("body").on("woocommerce-product-type-change",function(e,t,a){"ovabrw_car_rental"==t?(k(".show_if_ovabrw_car_rental").show(),k(".product_data_tabs .general_options").show(),k("ul.product_data_tabs li").removeClass("active"),k("ul.product_data_tabs li.general_options").addClass("active"),k("#shipping_product_data").css("display","none"),k("#general_product_data").css("display","block"),k(" ul.product_data_tabs li.general_tab").addClass("show_if_variable_bulk").show(),k("#general_product_data .pricing").addClass("show_if_variable_bulk").show(),k("#general_product_data .pricing").css("border-bottom","none"),k("ul.product_data_tabs li.inventory_tab").show(),k(".inventory_options").addClass("show_if_variable_bulk").show(),k("#inventory_product_data ._manage_stock_field").addClass("show_if_variable_bulk").show(),k("#inventory_product_data ._sold_individually_field").parent().addClass("show_if_variable_bulk").show(),k("#inventory_product_data ._sold_individually_field").addClass("show_if_variable_bulk").show()):"grouped"==t?(k(".show_if_ovabrw_car_rental").hide(),k(".product_data_tabs .general_options").hide()):(k(".show_if_ovabrw_car_rental").hide(),k("#general_product_data ._regular_price_field label span").hide(),k("#general_product_data ._sale_price_field").show(),k("#general_product_data .sale_price_dates_fields").show(),k("#general_product_data .pricing").css("border-bottom","1px solid #eee"))})},brw_manage_feature_text:function(){k(".ovabrw_features a.insert_rt_feature").click(function(e){e.preventDefault();e=k(this).data("row");k(this).closest(".ovabrw_features").find("tbody").append(e)}),k(".ovabrw_metabox_car_rental").on("click",".delete_feature",function(e){e.preventDefault(),k(this).closest(".tr_rt_feature").remove()}),k(".ovabrw_other_features a.insert_rt_other_feature").click(function(e){e.preventDefault();e=k(this).data("row");k(this).closest(".ovabrw_other_features").find("tbody").append(e)}),k(".ovabrw_metabox_car_rental").on("click",".delete_other_feature",function(e){e.preventDefault(),k(this).closest(".tr_rt_other_feature").remove()})},brw_add_fixed_time:function(){k(".ovabrw_fixed_time a.insert_rt_fixed_time").click(function(e){e.preventDefault();e=k(this).data("row");k(this).closest(".ovabrw_fixed_time").find("tbody").append(e),l.ovabrw_datepicker()}),k(".ovabrw_metabox_car_rental").on("click",".delete_fixed_time",function(e){e.preventDefault(),k(this).closest(".tr_rt_fixed_time").remove()})},brw_add_extra_feature:function(){k(".add_extra_features").click(function(e){e.preventDefault(),k(".product_data_tabs li").removeClass("active"),k(".product_data_tabs .attribute_options").addClass("active"),k(".ovabrw_metabox_car_rental").hide(),k("#product_attributes").show()})},brw_unavailable_time:function(){k(".ovabrw_rt_untime a.insert_rt_untime").click(function(e){e.preventDefault();e=k(this).data("row");k(this).closest(".ovabrw_rt_untime").find("tbody").append(e),l.ovabrw_datepicker()}),k(".ovabrw_metabox_car_rental").on("click",".delete_untime",function(e){e.preventDefault(),k(this).closest(".tr_rt_untime").remove()})},brw_local_price:function(){k(".ovabrw_local_price a.insert_local_price").click(function(e){e.preventDefault();e=k(this).data("row");k(this).closest(".ovabrw_local_price").find("tbody").append(e)}),k(".ovabrw_metabox_car_rental").on("click",".delete_local_price",function(e){e.preventDefault(),k(this).closest(".tr_rt_local_price").remove()}),k(".ovabrw_local_price ").on("change",'select[name="ovabrw_pickup_location[]"]',function(){var e=k(this);e.val()?(e.closest(".tr_rt_local_price").find('select[name="ovabrw_dropoff_location[]"]').prop("disabled",!1),e.closest(".tr_rt_local_price").find('select[name="ovabrw_dropoff_location[]"]').val("")):e.closest(".tr_rt_local_price").find('select[name="ovabrw_dropoff_location[]"]').prop("disabled",!0)}),k(".ovabrw_local_price ").on("click",'select[name="ovabrw_dropoff_location[]"]',function(){var t=k(this),a=t.closest(".tr_rt_local_price").find('select[name="ovabrw_pickup_location[]"]'),r=a.val();r?t.prop("disabled",!1):t.prop("disabled",!0);var o=[];k('.ovabrw_local_price select[name="ovabrw_pickup_location[]"]').each(function(e){var t=k(this).not(a).val();r==t&&(t=k(this).closest(".tr_rt_local_price").find('select[name="ovabrw_dropoff_location[]"]').val(),o.push(t))}),o&&o.forEach(function(e){e&&(e=e.replace(" ","\\ "),t.find("option[value="+e+"]").prop("disabled",!0))})})},brw_manage_resource:function(){k(".ovabrw_resources a.insert_resources").click(function(e){e.preventDefault();var t=k(this).data("row");k(this).closest(".ovabrw_resources").find("tbody").append(t);var a=k(this).closest(".ovabrw_resources").find(".tr_rt_resource");if(0<a.length){var e=a.length-1,t=a.eq(e),r=parseInt(e)+1,o=[];for(a.each(function(){var e=k(this).find('input[name="ovabrw_rs_id[]"]').val();e&&o.push(e)});-1!=k.inArray("resource_id_"+r,o);)r+=1;t.find('input[name="ovabrw_rs_id[]"]').val("resource_id_"+r)}}),k(".ovabrw_metabox_car_rental").on("click",".delete_resource",function(e){e.preventDefault(),k(this).closest(".tr_rt_resource").remove()})},brw_manage_service:function(){k(".ovabrw_metabox_car_rental").on("click",".ovabrw_service .insert_service_group",function(e){e.preventDefault();e=k(this).data("row");k(this).closest(".ovabrw_service").find(".wrap_ovabrw_service_group").last().append(e),l.brw_sort_key_service()}),k(document).on("click",".ovabrw_service .insert_service_option",function(e){e.preventDefault();var t=k(this).data("pos"),a=k(this).parent("th").find(".ovabrw_content_service table tbody").html();k(this).closest("table.widefat").find("tbody.wrap_service").append(a);var r=k(this).closest(".ovabrw_service_group").find(".wrap_service .tr_rt_service");if(0<r.length){var e=r.length-1,a=r.eq(e),o=parseInt(e)+1,i=[];for(r.each(function(){var e=k(this).find(".ovabrw_service_key").val();e&&i.push(e)});-1!=k.inArray("service_"+t+"_"+o,i);)o+=1;a.find(".ovabrw_service_key").val("service_"+t+"_"+o)}l.brw_sort_key_service()}),k(".ovabrw_metabox_car_rental").on("click",".delete_service",function(e){e.preventDefault(),k(this).closest(".tr_rt_service").remove(),l.brw_sort_key_service()}),k(".ovabrw_metabox_car_rental").on("click",".delete_service_group",function(e){e.preventDefault(),k(this).closest(".ovabrw_service_group").remove(),l.brw_sort_key_service()})},brw_sort_key_service:function(){var e=0;k(".ovabrw_service_group").each(function(){k(this).attr("data-pos",e),e++});for(var t=0;t<e;t++)k(".ovabrw_service_group").each(function(){k(this).attr("data-pos")==t&&(k(this).find('.wrap_service input[name*="ovabrw_service_id"]').attr("name","ovabrw_service_id["+t+"][]"),k(this).find('.wrap_service input[name*="ovabrw_service_name"]').attr("name","ovabrw_service_name["+t+"][]"),k(this).find('.wrap_service input[name*="ovabrw_service_adult_price"]').attr("name","ovabrw_service_adult_price["+t+"][]"),k(this).find('.wrap_service input[name*="ovabrw_service_children_price"]').attr("name","ovabrw_service_children_price["+t+"][]"),k(this).find('.wrap_service select[name*="ovabrw_service_duration_type"]').attr("name","ovabrw_service_duration_type["+t+"][]"),k(this).find(".insert_service_option").attr("data-pos",t))})},brw_manage_cus_taxonomy:function(){a("loaded"),k("#product_catchecklist input").length&&k("#product_catchecklist input").on("change",function(e){var r=k(this);r.attr("disabled","disabled"),a("changed");var t=function(e){const t=document.querySelectorAll(`input[name="${e}"]:checked`);let a=[];return t.forEach(e=>{a.push(e.value)}),a}("tax_input[product_cat][]");k.ajax({url:ajax_object.ajax_url,type:"POST",data:{action:"ovabrw_get_custom_tax_in_cat",checked_tax:t},success:function(e){if(r.removeAttr("disabled"),e){var t=e.split(",");if(t.length)for(var a=0;a<t.length;a++)0<k("#"+t[a]+"div").length&&k("#"+t[a]+"div").show()}}})})},brw_ui_select_cus_tax:function(){0<k(".ovabrw_custom_tax_with_cat").length&&k(".ovabrw_custom_tax_with_cat").select2()},brw_manage_period_time:function(){k(".ovabrw_petime a.insert_petime_record").click(function(e){e.preventDefault();var t=k(this).data("row"),e=k(".ovabrw_petime .row_petime_record").length,t=t.replace('data-pos=""','data-pos="'+e+'"');k(this).closest(".ovabrw_petime").find("tbody").first().append(t),l.choosehour(),l.change_pack_type()}),k(".ovabrw_metabox_car_rental").on("click",".ovabrw_petime .delete_petime",function(e){e.preventDefault(),k(this).closest(".row_petime_record").remove(),l.brw_sort_petime()}),k(".ovabrw_metabox_car_rental").on("click","a.insert_petime_discount",function(e){e.preventDefault();var t=k(this).find(".wrap_petime_discount tbody").html(),e=k(this).closest(".row_petime_record").data("pos"),t=t.replace(/ovabrw_key/g,e);k(this).closest(".ovabrw_petime_discount").find("tbody").first().append(t),l.ovabrw_datepicker()}),k(".ovabrw_metabox_car_rental").on("click",".ovabrw_petime .delete_petime_discount",function(e){e.preventDefault(),k(this).closest(".tr_petime_discount").remove()}),k("#ovabrw_unfixed_time").on("change",function(){"yes"==k("select#ovabrw_unfixed_time :selected").val()?(k(".period_times").hide(),k(".period_times_unfixed").show()):(k(".period_times").show(),k(".period_times_unfixed").hide())})},brw_sort_petime:function(){var e=0;k(".ovabrw_petime .row_petime_record").each(function(){k(this).attr("data-pos",e),e++});for(var t=k(".ovabrw_petime .row_petime_record").length,a=0;a<t;a++)k(".wrap_petime .row_petime_record").each(function(){k(this).attr("data-pos")==a&&(k(this).find("tbody.real .ovabrw_petime_discount_price").attr("name","ovabrw_petime_discount["+a+"][price][]"),k(this).find("tbody.real .ovabrw_petime_discount_start_time").attr("name","ovabrw_petime_discount["+a+"][start_time][]"),k(this).find("tbody.real .ovabrw_petime_discount_end_time").attr("name","ovabrw_petime_discount["+a+"][end_time][]"))})},brw_manage_show_hide_field_at_frontend:function(){"new_form"!=k("#ovabrw_manage_extra_tab").val()&&k(".ovabrw_extra_tab_shortcode_field").css("display","none"),k("#ovabrw_manage_extra_tab").on("change",function(){k(".ovabrw_extra_tab_shortcode_field").css("display","block"),"new_form"!=k(this).val()&&k(".ovabrw_extra_tab_shortcode_field").css("display","none")}),"new_time"!=k("#ovabrw_manage_time_book_start").val()&&k(".ovabrw_product_time_to_book_start_field").css("display","none"),k("#ovabrw_manage_time_book_start").on("change",function(){k(".ovabrw_product_time_to_book_start_field").css("display","block"),"new_time"!=k(this).val()&&k(".ovabrw_product_time_to_book_start_field").css("display","none")}),"new_time"!=k("#ovabrw_manage_time_book_end").val()&&k(".ovabrw_product_time_to_book_end_field").css("display","none"),k("#ovabrw_manage_time_book_end").on("change",function(){k(".ovabrw_product_time_to_book_end_field").css("display","block"),"new_time"!=k(this).val()&&k(".ovabrw_product_time_to_book_end_field").css("display","none")}),"new_time"!=k("#ovabrw_manage_default_hour_start").val()&&k(".ovabrw_product_default_hour_start_field").css("display","none"),k("#ovabrw_manage_default_hour_start").on("change",function(){k(".ovabrw_product_default_hour_start_field").css("display","block"),"new_time"!=k(this).val()&&k(".ovabrw_product_default_hour_start_field").css("display","none")}),"new_time"!=k("#ovabrw_manage_default_hour_end").val()&&k(".ovabrw_product_default_hour_end_field").css("display","none"),k("#ovabrw_manage_default_hour_end").on("change",function(){k(".ovabrw_product_default_hour_end_field").css("display","block"),"new_time"!=k(this).val()&&k(".ovabrw_product_default_hour_end_field").css("display","none")});var e=k("#ovabrw_price_type").children("option:selected").val(),t=k("#ovabrw_define_1_day").children("option:selected").val();"day"==e&&"hotel"==t&&k(".none-day-hotel").css("display","none"),k("#ovabrw_define_1_day").on("change",function(){k(".none-day-hotel").css("display","block"),"hotel"==k(this).val()&&k(".none-day-hotel").css("display","none")}),"new"!==k("#ovabrw_manage_custom_checkout_field").val()&&k(".ovabrw_product_custom_checkout_field_field").css("display","none"),k("#ovabrw_manage_custom_checkout_field").on("change",function(){k(".ovabrw_product_custom_checkout_field_field").css("display","block"),"all"==k(this).val()&&k(".ovabrw_product_custom_checkout_field_field").css("display","none")}),"new"!==k("#ovabrw_label_pickup_date_product").val()&&k(".ovabrw_new_pickup_date_product_field").css("display","none"),k("#ovabrw_label_pickup_date_product").on("change",function(){k(".ovabrw_new_pickup_date_product_field").css("display","block"),"new"!==k(this).val()&&k(".ovabrw_new_pickup_date_product_field").css("display","none")}),"new"!==k("#ovabrw_label_dropoff_date_product").val()&&k(".ovabrw_new_dropoff_date_product_field").css("display","none"),k("#ovabrw_label_dropoff_date_product").on("change",function(){k(".ovabrw_new_dropoff_date_product_field").css("display","block"),"new"!==k(this).val()&&k(".ovabrw_new_dropoff_date_product_field").css("display","none")})},brw_manage_globa_discount:function(){k(".ovabrw_metabox_car_rental").on("click",".ovabrw_global_discount .delete",function(e){e.preventDefault(),k(this).closest(".row_discount").remove()}),k(".ovabrw_global_discount a.insert_discount").click(function(e){e.preventDefault();var t=k(this).data("row"),e=k(".ovabrw_metabox_car_rental").attr("ova_price_type");"day"===e?t=t.replace('<option value="hours">Hour(s)</option>',""):"hour"===e&&(t=t.replace('<option value="days">Day(s)</option>',"")),k(this).closest(".ovabrw_global_discount").find("tbody").append(t)})},brw_manage_special_time_sort_rt:function(){var e=0;k(".ovabrw_rt .row_rt_record").each(function(){k(this).attr("data-pos",e),e++});for(var t=k(".ovabrw_rt .row_rt_record").length,a=0;a<t;a++)k(".wrap_rt .row_rt_record").each(function(){k(this).attr("data-pos")==a&&(k(this).find("tbody.real .ovabrw_rt_discount_price").attr("name","ovabrw_rt_discount["+a+"][price][]"),k(this).find("tbody.real .ovabrw_rt_discount_duration").attr("name","ovabrw_rt_discount["+a+"][duration][]"),k(this).find("tbody.real .ovabrw_rt_discount_duration_type").attr("name","ovabrw_rt_discount["+a+"][duration_type][]"))})},brw_manage_special_time:function(){k(".ovabrw_rt a.insert_rt_record").click(function(e){e.preventDefault();var t=k(this).data("row"),e=k(".ovabrw_rt .row_rt_record").length,t=t.replace('data-pos=""','data-pos="'+e+'"'),e=k(".ovabrw_metabox_car_rental").attr("ova_price_type");"day"===e?t=t.replace('<input type="text"  placeholder="10.5" name="ovabrw_rt_price_hour[]" value="" class="ovabrw_rt_price_hour"/>',""):"hour"===e&&(t=t.replace('<input type="text"  placeholder="10.5" name="ovabrw_rt_price[]" value="" class="ovabrw_rt_price"/>',"")),k(this).closest(".ovabrw_rt").find("tbody").first().append(t),l.ovabrw_datepicker()}),k(".ovabrw_metabox_car_rental").on("click",".ovabrw_rt .delete_rt",function(e){e.preventDefault(),k(this).closest(".row_rt_record").remove(),l.brw_manage_special_time_sort_rt()}),k(".ovabrw_metabox_car_rental").on("click","a.insert_rt_discount",function(e){e.preventDefault();var t=k(this).find(".wrap_rt_discount tbody").html(),e=k(this).closest(".row_rt_record").data("pos"),t=t.replace(/ovabrw_key/g,e),e=k(".ovabrw_metabox_car_rental").attr("ova_price_type");"day"===e?t=t.replace('<option value="hours">Hour(s)</option>',""):"hour"===e&&(t=t.replace('<option value="days">Day(s)</option>',"")),k(this).closest(".ovabrw_rt_discount").find("tbody").first().append(t),l.ovabrw_datepicker()}),k(".ovabrw_metabox_car_rental").on("click",".ovabrw_rt .delete_discount",function(e){e.preventDefault(),k(this).closest(".tr_rt_discount").remove()})},brw_show_hide_field_edit_product(){k("#product-type").length&&(e(k("#product-type").val()),k("#product-type").on("change",function(){e(k("#product-type").val())}))},brw_show_hide_field_edit_category(){},brw_product_templates(){0<k('select[name="ova_brw_template_elementor_template"]').length&&k('select[name="ova_brw_template_elementor_template"]').select2()},brw_product_map(){var e,t;k.fn.product_map=function(e){e=k.extend({lat:-33.8688,lng:151.2195,zoom:17},e);var t=new google.maps.Map(document.getElementById("admin_show_map"),{center:{lat:e.lat,lng:e.lng},zoom:e.zoom,gestureHandling:"cooperative"}),e=document.getElementById("pac-input"),a=new google.maps.places.Autocomplete(e);a.bindTo("bounds",t),t.controls[google.maps.ControlPosition.TOP_LEFT].push(e);var e=k("#pac-input").val(),r=new google.maps.InfoWindow({content:e}),o=new google.maps.Marker({map:t,position:t.getCenter()});o.addListener("click",function(){r.open(t,o)}),a.addListener("place_changed",function(){r.close();var e=a.getPlace();k("#map_info #ovabrw_address").val(k("input#pac-input").val()),e.geometry&&(e.geometry.viewport?t.fitBounds(e.geometry.viewport):(t.setCenter(e.geometry.location),t.setZoom(17)),o.setPlace({placeId:e.place_id,location:e.geometry.location}),o.setVisible(!0),k("#infowindow-content #place-name").val(e.name),k("#map_info #ovabrw_address").val(e.formatted_address),k("#map_info #ovabrw_latitude").val(e.geometry.location.lat()),k("#map_info #ovabrw_longitude").val(e.geometry.location.lng()),r.setContent(e.formatted_address),r.open(t,o))})},"undefined"!=typeof google&&0<k("#admin_show_map").length&&(e=parseFloat(k("input#ovabrw_latitude").val()),t=parseFloat(k("input#ovabrw_longitude").val()),k("#admin_show_map").product_map({lat:e,lng:t,zoom:17}))}};function e(e){"ovabrw_car_rental"==e&&(k("#general_product_data .pricing").css("border-bottom","none"),k("#general_product_data .pricing").addClass("show_if_variable_bulk").show(),k("#general_product_data ._regular_price_field").show(),k("#general_product_data ._sale_price_field").show())}function a(e){if("loaded"==e){if("undefined"!=typeof cus_tax_hide_p_loaded)for(var t=cus_tax_hide_p_loaded.split(","),a=0;a<t.length;a++)k("#"+t[a]+"div").length&&k("#"+t[a]+"div").hide()}else if("changed"==e&&"undefined"!=typeof all_cus_tax)for(t=all_cus_tax.split(","),a=0;a<t.length;a++)k("#"+t[a]+"div").length&&k("#"+t[a]+"div").hide()}k(document).ready(function(){l.init()})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,